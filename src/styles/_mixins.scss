@mixin breakpoint-up($breakpoint) {
  @if map-has-key($breakpoints, $breakpoint) {
    @media (max-width: map-get($breakpoints, $breakpoint)) {
      @content;
    }
  } @else {
    @warn "`#{$breakpoint}` is not defined breakpoint." +
          "Available breakpoints are: #{map-keys($breakpoints)}.";
  }
}

@mixin breakpoint-down($breakpoint) {
  @if map-has-key($breakpoints, $breakpoint) {
    @media (min-width: map-get($breakpoints, $breakpoint)) {
      @content;
    }
  } @else {
    @warn "`#{$breakpoint}` is not defined breakpoint." +
          "Available breakpoints are: #{map-keys($breakpoints)}.";
  }
}

@mixin breakpoint-between($breakpointDown, $breakpointUp) {
  @if map-has-key($breakpoints, $breakpointDown) and map-has-key($breakpoints, $breakpointUp) {
    @media (min-width: map-get($breakpoints, $breakpointDown)) and (max-width: map-get($breakpoints, $breakpointUp)) {
      @content;
    }
  } @else {
    @warn "`#{$breakpointDown}` or `#{$breakpointUp}` is not defined breakpoint." +
          "Available breakpoints are: #{map-keys($breakpoints)}.";
  }
}

@mixin generateColors($palette, $prefix: '') {
  $colors-map: ();
  @each $key, $value in $palette {
    @if $key != contrast {
      $map: ();
      $map: map-merge(
        $map,
        (
          $key: $value,
        )
      );
      $colors-map: map-merge($colors-map, $map);
    }
  }

  :root {
    @each $key, $value in $colors-map {
      @if $prefix != '' {
        --stockfolio-#{$prefix}-#{$key}: #{$value};
      } @else {
        --stockfolio-#{$key}: #{$value};
      }
    }
  }
}
